{"version":3,"sources":["../../src/mixins/DisplayObject.js"],"names":["p","PIXI","DisplayObject","prototype","ColorMatrixFilter","filters","setRenderable","re","renderable","t","setTransform","setMask","ma","mask","Graphics","Sprite","console","warn","setAlpha","a","alpha","setTint","i","tint","utils","hexToUint","r","g","b","c","setColorTransform","rA","gA","bA","filter","colorTransformFilter","matrix","hasOwnProperty","Object","defineProperty","set","_colorTransformFilter","get","extend","e","child","create","__parent","constructor"],"mappings":"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","file":"DisplayObject.js","sourcesContent":["import utils from '../animate/utils';\r\n\r\n/**\r\n * Mixins for the PIXI.DisplayObject class.\r\n * @memberof PIXI\r\n * @class DisplayObject\r\n */\r\nconst p = PIXI.DisplayObject.prototype;\r\n\r\n// Color Matrix filter\r\nlet ColorMatrixFilter;\r\nif (PIXI.filters) {\r\n    ColorMatrixFilter = PIXI.filters.ColorMatrixFilter;\r\n}\r\n\r\n/**\r\n * Function to see if this is renderable or not. Useful for setting masks.\r\n * @method PIXI.DisplayObject#setRenderable\r\n * @param  {Boolean} [renderable=false] Make renderable\r\n * @return {PIXI.DisplayObject}\r\n */\r\n/**\r\n * Shortcut to `setRenderable`.\r\n * @method PIXI.DisplayObject#re\r\n * @param  {Boolean} [renderable=false] Make renderable\r\n * @return {PIXI.DisplayObject}\r\n */\r\np.setRenderable = p.re = function(renderable) {\r\n    this.renderable = !!renderable;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Shortcut for `setTransform`.\r\n * @method PIXI.DisplayObject#tr\r\n * @param {Number} x The X position\r\n * @param {Number} y The Y position\r\n * @param {Number} scaleX The X Scale value\r\n * @param {Number} scaleY The Y Scale value\r\n * @param {Number} skewX The X skew value\r\n * @param {Number} skewY The Y skew value\r\n * @param {Number} pivotX The X pivot value\r\n * @param {Number} pivotY The Y pivot value\r\n * @return {PIXI.DisplayObject} Instance for chaining\r\n */\r\np.t = p.setTransform;\r\n\r\n/**\r\n * Setter for mask to be able to chain.\r\n * @method PIXI.DisplayObject#setMask\r\n * @param {PIXI.Graphics} mask The mask shape to use\r\n * @return {PIXI.DisplayObject} Instance for chaining\r\n */\r\n/**\r\n * Shortcut for `setMask`.\r\n * @method PIXI.DisplayObject#ma\r\n * @param {PIXI.Sprite|PIXI.Graphics} mask The mask shape to use\r\n * @return {PIXI.DisplayObject} Instance for chaining\r\n */\r\np.setMask = p.ma = function(mask) {\r\n    // According to PIXI, only Graphics and Sprites can \r\n    // be used as mask, let's ignore everything else, like other\r\n    // movieclips and displayobjects/containers\r\n    if (mask) {\r\n        if (!(mask instanceof PIXI.Graphics) && !(mask instanceof PIXI.Sprite)) {\r\n            if (typeof console !== \"undefined\" && console.warn) {\r\n                console.warn(\"Warning: Masks can only be PIXI.Graphics or PIXI.Sprite objects.\");\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    this.mask = mask;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Setter for the alpha\r\n * @method PIXI.DisplayObject#setAlpha\r\n * @param {Number} alpha The alpha amount to use, from 0 to 1\r\n * @return {PIXI.DisplayObject} Instance for chaining\r\n */\r\n/**\r\n * Shortcut for `setAlpha`.\r\n * @method PIXI.DisplayObject#a\r\n * @param {Number} alpha The alpha amount to use, from 0 to 1\r\n * @return {PIXI.DisplayObject} Instance for chaining\r\n */\r\np.setAlpha = p.a = function(alpha) {\r\n    this.alpha = alpha;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Set the tint values by color.\r\n * @method PIXI.DisplayObject#setTint\r\n * @param {int} tint The color value to tint\r\n * @return {PIXI.DisplayObject} Object for chaining\r\n */\r\n/**\r\n * Shortcut to `setTint`.\r\n * @method PIXI.DisplayObject#tn\r\n * @param {Number|String} tint The red percentage value\r\n * @return {PIXI.DisplayObject} Object for chaining\r\n */\r\np.setTint = p.i = function(tint) {\r\n    if (typeof tint === \"string\") {\r\n        tint = utils.hexToUint(tint);\r\n    }\r\n    // this.tint = tint\r\n    // return this;\r\n    // TODO: Replace with DisplayObject.tint setter\r\n    // once the functionality is added to Pixi.js, for\r\n    // now we'll use the slower ColorMatrixFilter to handle\r\n    // the color transformation\r\n    var r = tint >> 16 & 0xFF;\r\n    var g = tint >> 8 & 0xFF;\r\n    var b = tint & 0xFF;\r\n    return this.c(r / 255, 0, g / 255, 0, b / 255, 0);\r\n};\r\n\r\n/**\r\n * Set additive and multiply color, tinting\r\n * @method PIXI.DisplayObject#setColorTransform\r\n * @param {Number} r The multiply red value\r\n * @param {Number} rA The additive red value\r\n * @param {Number} g The multiply green value\r\n * @param {Number} gA The additive green value\r\n * @param {Number} b The multiply blue value\r\n * @param {Number} bA The additive blue value\r\n * @return {PIXI.DisplayObject} Object for chaining\r\n */\r\n/**\r\n * Shortcut to `setColor`.\r\n * @method PIXI.DisplayObject#c\r\n * @param {Number} r The multiply red value\r\n * @param {Number} rA The additive red value\r\n * @param {Number} g The multiply green value\r\n * @param {Number} gA The additive green value\r\n * @param {Number} b The multiply blue value\r\n * @param {Number} bA The additive blue value\r\n * @return {PIXI.DisplayObject} Object for chaining\r\n */\r\np.setColorTransform = p.c = function(r, rA, g, gA, b, bA) {\r\n    var filter = this.colorTransformFilter;\r\n    filter.matrix[0] = r;\r\n    filter.matrix[4] = rA;\r\n    filter.matrix[6] = g;\r\n    filter.matrix[9] = gA;\r\n    filter.matrix[12] = b;\r\n    filter.matrix[14] = bA;\r\n    this.filters = [filter];\r\n    return this;\r\n};\r\n\r\n/**\r\n * The current default color transforming filters\r\n * @name {PIXI.filters.ColorMatrixFilter} PIXI.DisplayObject#colorTransformFilter\r\n */\r\nif (!p.hasOwnProperty('colorTransformFilter')) {\r\n    Object.defineProperty(p, 'colorTransformFilter', {\r\n        set: function(filter) {\r\n            this._colorTransformFilter = filter;\r\n        },\r\n        get: function() {\r\n            return this._colorTransformFilter || new ColorMatrixFilter();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Extend a container\r\n * @method PIXI.DisplayObject.extend\r\n * @static\r\n * @param {PIXI.DisplayObject} child The child function\r\n * @return {PIXI.DisplayObject} THe child\r\n */\r\n/**\r\n * Extend a container (shortcut for `extend`)\r\n * @method PIXI.DisplayObject.e\r\n * @static\r\n * @param {PIXI.DisplayObject} child The child function\r\n * @return {PIXI.DisplayObject} THe child\r\n */\r\nPIXI.DisplayObject.extend = PIXI.DisplayObject.e = function(child) {\r\n    child.prototype = Object.create(p);\r\n    child.prototype.__parent = p;\r\n    child.prototype.constructor = child;\r\n    return child;\r\n};"]}